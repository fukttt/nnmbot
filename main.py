import asyncio
from mechanic.pars import Parser
from aiogram.types import ParseMode, Message
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton
from aiogram import Bot, Dispatcher, types, executor
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from mechanic.db import User, Base

bot = Bot(token="1791568656:AAF7oE2R7L8Aw3pSGxV2YaYLzxDQROqDqaI")
dp = Dispatcher(bot)


def mainKeyboard():
    button1 = KeyboardButton('üé¨ –ù–æ–≤–∏–Ω–∫–∏ –ö–∏–Ω–æ')
    button3 = KeyboardButton('üëæ –ê–≤—Ç–æ—Ä')
    button4 = KeyboardButton('‚ùì –û –±–æ—Ç–µ')
    greet_kb = ReplyKeyboardMarkup(resize_keyboard=True)
    greet_kb.add(button1, button3)
    greet_kb.add(button4)
    return greet_kb


def paginationKeyboard(page):
    button1 = KeyboardButton('‚¨ÖÔ∏è')
    button2 = KeyboardButton("üìç " + str(page))
    button3 = KeyboardButton('‚û°Ô∏è')
    button4 = KeyboardButton('üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    greet_kb = ReplyKeyboardMarkup(resize_keyboard=True)
    greet_kb.add(button1, button2, button3)
    greet_kb.add(button4)
    return greet_kb


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    if not session.query(User).filter_by(tgid=message.from_user.id).first():
        newuser = User(tgid=message.from_user.id)
        session.add(newuser)
        session.commit()
    await message.reply(
        "–ü—Ä–∏–≤–µ—Ç! –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –Ω–æ–≤–∏–Ω–∫–∏ –∫–∏–Ω–æ –∏ —Å–∫–∞—á–∞—Ç—å –∏—Ö —á–µ—Ä–µ–∑ —Ç–æ—Ä—Ä–µ–Ω—Ç!",
        reply_markup=mainKeyboard())


@dp.message_handler(commands=['search'])
async def process_start_command(message: types.Message):
    a = Parser()
    links = await a.get_search(message.text.split(' ', 1)[1])
    await message.reply(
        "–ü—Ä–∏–≤–µ—Ç! –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –Ω–æ–≤–∏–Ω–∫–∏ –∫–∏–Ω–æ –∏ —Å–∫–∞—á–∞—Ç—å –∏—Ö —á–µ—Ä–µ–∑ —Ç–æ—Ä—Ä–µ–Ω—Ç!",
        reply_markup=mainKeyboard())


@dp.message_handler(commands=['sendall'])
async def sendall_command(message: types.Message):
    counter = 0
    for user in session.query(User).all():
        try:
            await bot.send_message(user.tgid, message.text.split(' ', 1)[1])
            counter += 1
        except:
            pass

    await message.reply("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ %d —Ä–∞–∑." % counter)


@dp.message_handler(commands=['info'])
async def info_command(message: types.Message):
    count = session.query(User).count()
    await message.reply("–í—Å–µ–≥–æ —é–∑–µ—Ä–æ–≤ –≤ –ë–î %d" % count)


@dp.message_handler()
async def echo_message(msg: types.Message):

    user = session.query(User).filter_by(tgid=msg.from_user.id).first()

    if "–°—Ç—Ä–∞–Ω–∏—Ü–∞" in msg.text:
        page = msg.text.split(':')[1]
        a = Parser()
        allFilms = await a.get_films(int(page))
        for a in allFilms:
            caption = "`" + a.split(' : ')[0] + "`\n–†–∞–∑–º–µ—Ä : *" + a.split(
                ' : ')[3] + "*"
            imag = "https:" + a.split(' : ')[1].split('=')[1].replace(
                "%2F", "/")
            inline_kb_full = InlineKeyboardMarkup(row_width=2)
            inline_kb_full.add(
                InlineKeyboardButton(
                    'MAGNET üß≤',
                    url="https://www.sky-net.co/magnet.php?magnet=" +
                    a.split(' : ')[2]))
            #inline_kb_full.add(InlineKeyboardButton('–°–ú–û–¢–†–ï–¢–¨ üëÅ', url="https://4-u.shop/?magnet="+a.split(' : ')[2]))
            await bot.send_photo(msg.from_user.id,
                                 imag,
                                 caption=caption,
                                 parse_mode=ParseMode.MARKDOWN,
                                 reply_markup=inline_kb_full)
    if "–°—Ç—Ä–∞–Ω–∏—Ü—É" in msg.text:
        await bot.send_message(
            msg.from_user.id,
            "–°–∫–∞–∂–∏ –±–æ—Ç—É '–°—Ç—Ä–∞–Ω–∏—Ü–∞:2' –∏ –æ–Ω –≤—ã–¥–∞—Å—Ç —Ç–µ–±–µ —Ç–æ—Ä—Ä–µ–Ω—Ç—ã –Ω–∞ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ"
        )

    if "–ê–≤—Ç–æ—Ä" in msg.text:
        await bot.send_message(msg.from_user.id, "–ê–≤—Ç–æ—Ä @Pirate2110")

    if "–û –±–æ—Ç–µ" in msg.text:
        await bot.send_message(
            msg.from_user.id,
            "–ë–æ—Ç –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–º–µ–µ—Ç —É—Ä–µ–∑–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª : \n–ü–æ–∏—Å–∫ –ø–æ –Ω–æ–≤–∏–Ω–∫–∞–º –∫–∏–Ω–æ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º.\n–í–æ–∑–º–æ–∂–Ω–æ –µ—Å–ª–∏ –±–æ—Ç –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è, —Ç–æ —è —Å–¥–µ–ª–∞—é –ø–æ–∏—Å–∫ –∏ –µ—â–µ –º–Ω–æ–≥–æ —á–µ–≥–æ."
        )

    if "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" in msg.text:
        await msg.reply("–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
                        reply_markup=mainKeyboard())

    if "–ù–æ–≤–∏–Ω–∫–∏ –ö–∏–Ω–æ" in msg.text:

        user.page = 1
        session.add(user)
        session.commit()

        a = Parser()
        allFilms = await a.get_films(1)
        for a in allFilms:

            caption = "`" + a.split(' : ')[0] + "`\n–†–∞–∑–º–µ—Ä : *" + a.split(
                ' : ')[3] + "*"
            imag = "https:" + a.split(' : ')[1].split('=')[1].replace(
                "%2F", "/")
            inline_kb_full = InlineKeyboardMarkup(row_width=2)
            inline_kb_full.add(
                InlineKeyboardButton(
                    'MAGNET üß≤',
                    url="https://www.sky-net.co/magnet.php?magnet=" +
                    a.split(' : ')[2]))
            #inline_kb_full.add(InlineKeyboardButton('–°–ú–û–¢–†–ï–¢–¨ üëÅ', url="https://4-u.shop/?magnet="+a.split(' : ')[2]))
            try:
                await bot.send_photo(msg.from_user.id,
                                     imag,
                                     caption=caption,
                                     parse_mode=ParseMode.MARKDOWN,
                                     reply_markup=inline_kb_full)
            except Exception as e:
                pass
        await msg.reply("–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.",
                        reply_markup=paginationKeyboard(user.page))
    if "‚¨ÖÔ∏è" in msg.text:
        if user.page >= 1:
            if user.page >= 2:
                user.page -= 1
            session.add(user)
            session.commit()
            a = Parser()
            allFilms = await a.get_films(user.page)
            for a in allFilms:

                caption = "`" + a.split(' : ')[0] + "`\n–†–∞–∑–º–µ—Ä : *" + a.split(
                    ' : ')[3] + "*"
                imag = "https:" + a.split(' : ')[1].split('=')[1].replace(
                    "%2F", "/")
                inline_kb_full = InlineKeyboardMarkup(row_width=2)
                inline_kb_full.add(
                    InlineKeyboardButton(
                        'MAGNET üß≤',
                        url="https://www.sky-net.co/magnet.php?magnet=" +
                        a.split(' : ')[2]))
                inline_kb_full.add(
                    InlineKeyboardButton('–°–ú–û–¢–†–ï–¢–¨ üëÅ',
                                         url="https://4-u.shop/?magnet=" +
                                         a.split(' : ')[2]))
                try:
                    await bot.send_photo(msg.from_user.id,
                                         imag,
                                         caption=caption,
                                         parse_mode=ParseMode.MARKDOWN,
                                         reply_markup=inline_kb_full)
                except Exception as e:
                    pass

        else:
            await bot.send_message(msg.from_user.id,
                                   "–ù—É–ª–µ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç !.",
                                   reply_markup=paginationKeyboard(user.page))

        await msg.reply("–ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞.",
                        reply_markup=paginationKeyboard(user.page))

    if "‚û°Ô∏è" in msg.text:

        user.page += 1
        session.add(user)
        session.commit()

        await msg.reply("–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞.",
                        reply_markup=paginationKeyboard(user.page))
        a = Parser()
        allFilms = await a.get_films(user.page)
        for a in allFilms:

            caption = "`" + a.split(' : ')[0] + "`\n–†–∞–∑–º–µ—Ä : *" + a.split(
                ' : ')[3] + "*"
            imag = "https:" + a.split(' : ')[1].split('=')[1].replace(
                "%2F", "/")
            inline_kb_full = InlineKeyboardMarkup(row_width=2)
            inline_kb_full.add(
                InlineKeyboardButton(
                    'MAGNET üß≤',
                    url="https://www.sky-net.co/magnet.php?magnet=" +
                    a.split(' : ')[2]))
            #inline_kb_full.add(InlineKeyboardButton('–°–ú–û–¢–†–ï–¢–¨ üëÅ', url="https://4-u.shop/?magnet="+a.split(' : ')[2]))
            try:
                await bot.send_photo(msg.from_user.id,
                                     imag,
                                     caption=caption,
                                     parse_mode=ParseMode.MARKDOWN,
                                     reply_markup=inline_kb_full)
            except Exception as e:
                pass


if __name__ == '__main__':
    db = create_engine("sqlite:///users.db")
    connection = db.connect()
    Session = sessionmaker(bind=db)
    session = Session()
    Base.metadata.create_all(db)
    executor.start_polling(dp)
